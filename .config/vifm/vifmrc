" -- General Settings --

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`. While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.
set syscalls

" Trash Directory
set trash

" This is how many directories to store in the directory history.
set history=100

" Automatically resolve symbolic links on l or Enter.
set nofollowlinks

" Natural sort of (version) numbers within text.
set sortnumbers

" Maximum number of changes that can be undone.
set undolevels=100

" Use vim when opening vifm help file
set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.
set norunexec

" Selected color scheme
colorscheme dracula

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
set timefmt=%m/%d\ %H:%M

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files). In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase letter
set ignorecase
set smartcase

" Don't highlight search results automatically
set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Don't do too many requests to slow file systems
if !has('win')
    set slowfs=curlftpfs
endif

" Set custom status line look
set statusline="  Hint: %z%= %A %10u:%-7g %15s %20d  "

" Set line numbers to show
set nu relativenumber

" :mark mark /full/directory/path [filename]
mark h ~/

" What should be saved automatically between vifm runs
set vifminfo=bmarks,bookmarks,registers,dirstack,savedirs,state,tui,
    \chistory,dhistory,fhistory,phistory,shistory

" Set the editor to use when editing files from within vifm
set vicmd=nvim

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart

" ------------------------------------------------------------------------------

" -- Programs to Open Files --
" PDF
filextype *.pdf zathura %c %i &, apvlv %c, xpdf %c

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice --nologo %f &

" Web
filextype *.html,*.htm
        \ {Open with firefox}
        \ firefox %f &,

" Images
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
        \ {View in loupe}
        \ loupe,

" Videos
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
        \*.fl[icv],*.m2v,*.mov,*.webm,*.mts,*.m4v,*.r[am],*.qt,*.divx,
        \*.as[fx]
        \ {View using mpv}
        \ mpv %f,

" Audio
filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
        \ {View using cmus}
        \ foot -e cmus %f &,
        \ {Play using ffplay}
        \ ffplay -nodisp -autoexit %c,
        \ {Play using MPlayer}
        \ mplayer %f,

" ------------------------------------------------------------------------------

" -- Image Previews --
" If you are using ueberzugpp, you can have animated gif previews with this:
fileviewer <image/gif>
    \ #ueberzug#image_no_cache %px %py %pw %ph
    \ %pc
    \ #ueberzug#clear

" Otherwise, use the video fileviewer for gifs
" fileviewer <video/*>,<image/gif>
fileviewer <video/*>
    \ #ueberzug#video %px %py %pw %ph
    \ %pc
    \ #ueberzug#clear

fileviewer <image/*>
    \ #ueberzug#image %px %py %pw %ph
    " or \ #ueberzug#image_no_cache %px %py %pw %ph
    \ %pc
    \ #ueberzug#clear
fileviewer <audio/*>
    \ #ueberzug#audio %px %py %pw %ph
    \ %pc
    \ #ueberzug#clear
fileviewer <font/*>
    \ #ueberzug#djvu %px %py %pw %ph
    \ %pc
    \ #ueberzug#clear

fileviewer *.pdf
    \ #ueberzug#pdf %px %py %pw %ph
    \ %pc
    \ #ueberzug#clear
fileviewer *.epub
    \ #ueberzug#epub %px %py %pw %ph
    \ %pc
    \ #ueberzug#clear
fileviewer *.djvu
    \ #ueberzug#djvu %px %py %pw %ph
    \ %pc
    \ #ueberzug#clear

fileviewer *.cbz
    \ #ueberzug#cbz %px %py %pw %ph
    \ %pc
    \ #ueberzug#clear
fileviewer *.cbt
    \ #ueberzug#cbt %px %py %pw %ph %c
    \ %pc
    \ #ueberzug#clear
fileviewer *.cbr
    \ #ueberzug#cbr %px %py %pw %ph %c
    \ %pc
    \ #ueberzug#clear
fileviewer *.cb7
    \ #ueberzug#cb7 %px %py %pw %ph %c
    \ %pc
    \ #ueberzug#clear

" (Everything else)
" Syntax highlighting in preview w/ line numbers & git changes
fileviewer *[^/] bat --style=numbers,,changes --theme=Dracula --color=always --pager=never %c

" ------------------------------------------------------------------------------

" -- Folder and File Icons --
" Filetypes/directories
set classify=' :dir:/, :exe:, :reg:, :link:,? :?:, ::../::'

" Specific files
set classify+=' ::.Xdefaults,,.Xresources,,.bashprofile,,.bash_profile,,.bashrc,,.dmrc,,.d_store,,.fasd,,.gitconfig,,.gitignore,,.jack-settings,,.mime.types,,.nvidia-settings-rc,,.pam_environment,,.profile,,.recently-used,,.selected_editor,,.xinitpurc,,.zprofile,,.yarnc,,.snclirc,,.tmux.conf,,.urlview,,.config,,.ini,,.user-dirs.dirs,,.mimeapps.list,,.offlineimaprc,,.msmtprc,,.Xauthority,,config::'
set classify+=' ::dropbox::'
set classify+=' ::favicon.*,,README,,readme::'
set classify+=' ::*.vim,,.vim,,.vimrc,,.gvimrc,,.vifm::'
set classify+=' ::gruntfile.coffee,,gruntfile.js,,gruntfile.ls::'
set classify+=' ::gulpfile.coffee,,gulpfile.js,,gulpfile.ls::'
set classify+=' ::ledger::'
set classify+=' ::license,,copyright,,copying,,LICENSE,,COPYRIGHT,,COPYING::'
set classify+=' ::node_modules::'
set classify+=' ::react.jsx::'

" File extensions
set classify+='λ ::*.ml,,*.mli::'
set classify+=' ::*.styl::'
set classify+=' ::*.scss::'
set classify+=' ::*.py,,*.pyc,,*.pyd,,*.pyo::'
set classify+=' ::*.php::'
set classify+=' ::*.markdown,,*.md::'
set classify+=' ::*.json::'
set classify+=' ::*.js::'
set classify+=' ::*.bmp,,*.gif,,*.ico,,*.jpeg,,*.jpg,,*.png,,*.svg,,*.svgz,,*.tga,,*.tiff,,*.xmb,,*.xcf,,*.xpm,,*.xspf,,*.xwd,,*.cr2,,*.dng,,*.3fr,,*.ari,,*.arw,,*.bay,,*.crw,,*.cr3,,*.cap,,*.data,,*.dcs,,*.dcr,,*drf,,*.eip,,*.erf,,*.fff,,*.gpr,,*.iiq,,*.k25,,*.kdc,,*.mdc,,.*mef,,*.mos,,.*.mrw,,.*.obm,,*.orf,,*.pef,,*.ptx,,*.pxn,,*.r3d,,*.raf,,*.raw,,*.rwl,,*.rw2,,*.rwz,,*.sr2,,*.srf,,*.srf,,*.srw,,*.tif,,*.x3f::'
set classify+=' ::*.ejs,,*.htm,,*.html,,*.slim,,*.xml::'
set classify+=' ::*.mustasche::'
set classify+=' ::*.css,,*.less,,*.bat,,*.conf,,*.ini,,*.rc,,*.yml,,*.cfg,,*.rc::'
set classify+=' ::*.rss::'
set classify+=' ::*.coffee::'
set classify+=' ::*.twig::'
set classify+=' ::*.c++,,*.cpp,,*.cxx,,*.h::'
set classify+=' ::*.cc,,*.c::'
set classify+=' ::*.hs,,*.lhs::'
set classify+=' ::*.lua::'
set classify+=' ::*.jl::'
set classify+=' ::*.go::'
set classify+=' ::*.ts::'
set classify+=' ::*.db,,*.dump,,*.sql::'
set classify+=' ::*.sln,,*.suo::'
set classify+=' ::*.exe::'
set classify+=' ::*.diff,,*.sum,,*.md5,,*.sha512::'
set classify+=' ::*.scala::'
set classify+=' ::*.java,,*.jar::'
set classify+=' ::*.xul::'
set classify+=' ::*.clj,,*.cljc::'
set classify+=' ::*.pl,,*.pm,,*.t::'
set classify+=' ::*.cljs,,*.edn::'
set classify+=' ::*.rb::'
set classify+=' ::*.fish,,*.sh,,*.bash,,*.zsh::'
set classify+=' ::*.dart::'
set classify+=' ::*.f#,,*.fs,,*.fsi,,*.fsscript,,*.fsx::'
set classify+=' ::*.rlib,,*.rs::'
set classify+=' ::*.d::'
set classify+=' ::*.erl,,*.hrl::'
set classify+=' ::*.ai::'
set classify+=' ::*.psb,,*.psd::'
set classify+=' ::*.jsx::'
set classify+=' ::*.aac,,*.anx,,*.asf,,*.au,,*.axa,,*.flac,,*.m2a,,*.m4a,,*.mid,,*.midi,,*.mp3,,*.mpc,,*.oga,,*.ogg,,*.ogx,,*.ra,,*.ram,,*.rm,,*.spx,,*.wav,,*.wma,,*.ac3::'
set classify+=' ::*.avi,,*.flv,,*.mkv,,*.mov,,*.mov,,*.mp4,,*.mpeg,,*.mpg,,*.webm::'
set classify+=' ::*.epub,,*.pdf,,*.fb2,,*.djvu::'
set classify+=' ::*.7z,,*.apk,,*.bz2,,*.cab,,*.cpio,,*.deb,,*.gem,,*.gz,,*.gzip,,*.lh,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.tar,,*.tgz,,*.xz,,*.zip::'
set classify+=' ::*.cbr,,*.cbz::'
set classify+=' ::*.log::'
set classify+=' ::*.doc,,*.docx,,*.adoc::'
set classify+=' ::*.xls,,*.xls,,*.xlsmx::'
set classify+=' ::*.pptx,,*.ppt::'

" ------------------------------------------------------------------------------

" -- Mappings --
command! zip if [ -n "%a" ]; then
           \     zip -r '%a.zip' %f;
           \ fi

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" yank current directory path into the clipboard
nnoremap yd :!echo -n %d | wl-copy<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

" yank current file path into the clipboard
nnoremap yf :!echo -n %c:p | wl-copy<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

" yank current filename without path into the clipboard
nnoremap yn :!echo -n %c | wl-copy<cr>:echo expand('%"c') "is yanked to clipboard"<cr>

" yank root of current file's name into the clipboard
nnoremap yr :!echo -n %c:r | wl-copy<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>

" clear highlighted search results
nnoremap <C-n> :noh<CR>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cW<c-u>
nnoremap A cW
nnoremap aa cw

" set as wallpaper shortcut
nnoremap WW :!feh --bg-fill %c:p<cr>

" Open console in current directory
nnoremap ,t :!foot &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" force open a file in neovim
nnoremap . :!nvim ./%f<cr>

" make jumping between search results easier to follow
nnoremap n nzzzv
nnoremap N Nzzzv

" make scrolling easier to follow
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

" jump to files with fzf
nnoremap <C-f> :FZFfind<CR>
command! FZFfind : set noquickview
                \| let $FZF_PICK = term('fd --unrestricted | fzf 2>/dev/tty')
                \| if $FZF_PICK != ''
                \|     execute 'goto' fnameescape($FZF_PICK)
                \| endif
                \| view
